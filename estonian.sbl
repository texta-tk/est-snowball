/* Estonian stemmer. 
*/

routines (
	mark_regions
	R2
	LONGV
	CRV
	case_ending
	even_ending
	plural_three_first_cases
	finish
	double
	undouble
)

stringdef a" hex 'E4' //a-umlaut ä
stringdef o" hex 'F6' //o-umlaut ö
stringdef o' hex 'F5' //o with tilde õ
stringdef u" hex 'FC' //u-umlaut ü

externals ( stem )
booleans ( ending_removed )
integers ( p1 p2 )
groupings ( V1 C RV)
stringescapes {}

define V1 'aeiou{o'}{a"}{o"}{u"}'
define C 'bcdfghjklmnpqrstvwxz'
define RV 'aeiuo'
define mark_regions as (

    $p1 = limit
    $p2 = limit

    goto V1  gopast non-V1  setmark p1
    goto V1  gopast non-V1  setmark p2
)


backwardmode (

	define R2 as $p2 <= cursor
	define even_ending as (
	    setlimit tomark p1 for ([substring])
            among(
		'gi' (among('ikke' 'sse' 'ike' 'le' 'ni' 'na' 'ta' 'ga' 'de' 'te'))
		'ki' (among('st' 'lt'))
	    )
	    delete //ei saa kätte nom, gen v part-is sõnu nt 'tühjegi', muidu OK. (ˇkatki != kat, slprst käänded)
	)

	define LONGV as 
		among('aa' 'ee' 'ii' 'oo' 'uu' '{a"}{a"}' '{o"}{o"}' '{u"}{u"}' '{o'}{o'}')
	define CRV as (C RV)

	define case_ending as (
	    setlimit tomark p1 for ([substring])
            among(
		'sse' (RV)
		's'  (RV)//jura ˇkursus
		'st' (RV)
		'le' (RV)
		'l'  (RV) //jura ˇahel, ˇaadel
		'lt' (RV)
		'ni' (RV)
		'na' (RV)
		'ta' (RV)
		'ga' (RV)
		'ks' (RV)
	    )
	    delete
	    set ending_removed
	)

	define plural_three_first_cases as ( // ending not removed before
	    setlimit tomark p1 for ([substring])
            among(
		'ikkude' (<-'ik')
		'ikke' (<-'ik')
		'ike' (<-'ik')
		'sid' (not LONGV delete) //mitm.os. sid. ˇgaasid, aga autosid -> auto
		'aid' (<-'a') //rattaid -> ratta ˇöid ja ˇpuid jäävad välja, kursor sinna ei lähe. Siis on probla, kui on liitsõna vahtrapuid == vahtrapuid
		'eid' (<-'e')  
		'te' (delete)
		'de' (delete)
		'd' (RV delete) //PLNOM. voodid -> voodi
	    )	    	
	)

	define double as (
            test among('kk' 'tt' 'pp')
	)

	define undouble as (
            next [hop 1] delete
	)

	define finish as (// undouble consonant if 'C1C1V'
	    (V1) (double)
	    and undouble
	    //goto non-V1 [C] -> x  x delete // undouble consonant if 'C1C1V', nt 'mõtte' -> 'mõte'
	)


)

define stem as (
	do mark_regions
	unset ending_removed
	backwards (
	    do even_ending
	    do case_ending
	    //(ending_removed do plural) or (do plural_par_nom)
	    do plural_three_first_cases
	    do finish
	)
)
